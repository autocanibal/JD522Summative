/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.mondemkhize.jd522summative;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Monde
 */
public class UsersPage extends javax.swing.JFrame {

    /**
     * Creates new form UsersPage
     */
    public UsersPage() {
        initComponents();
        this.setLocationRelativeTo(null);
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        ArrayList entries = new DatabaseUtils().selectTable(this, "Departments");
        for (int a = 0; a < entries.size(); a++) {
            tableModel.addRow((Object[]) entries.get(a));
        }
        this.jTable1.setVisible(false);
        this.jScrollPane1.setVisible(false);
        this.idField.setText(new DatabaseUtils().nextId(this, this.typeComboBox.getItemAt(this.typeComboBox.getSelectedIndex())));
        this.revalidate();
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addOrRemoveComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addOrRemoveComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Add", "Remove" }));
        addOrRemoveComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrRemoveComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Type");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Department", "Faculty", "Student" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel2.setText("ID");

        jLabel3.setText("Name");

        idField.setEditable(false);
        idField.setText("1");

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(addOrRemoveComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(idField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(backBtn)
                            .addComponent(addBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(addOrRemoveComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(addBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backBtn)
                        .addGap(24, 24, 24))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        // TODO add your handling code here:
        typeComboBox.getSelectedIndex();
        
        switch (typeComboBox.getSelectedIndex()) {
            case 0:
                {
                    this.idField.setText(new DatabaseUtils().nextId(this, this.typeComboBox.getItemAt(0)));
                    DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
                    if(tableModel.getColumnCount() > 2){
                        tableModel.setColumnCount(2);
                    }
                    if (tableModel.getRowCount() >= 1) {
                        tableModel.setRowCount(0);
                        ArrayList entries = new DatabaseUtils().selectTable(this, this.typeComboBox.getItemAt(0));
                        for (int a = 0; a < entries.size(); a++) {
                            tableModel.addRow((Object[]) entries.get(a));
                        }
                    }
                    break;
                }
            case 1:
                {
                    this.idField.setText(new DatabaseUtils().nextId(this, this.typeComboBox.getItemAt(1)));
                    DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
                    if(tableModel.getColumnCount() > 2){
                        tableModel.setColumnCount(2);
                    }       
                    tableModel.addColumn("dep_id");
                    tableModel.addColumn("course_id");
                    if (tableModel.getRowCount() >= 1) {
                        tableModel.setRowCount(0);
                        ArrayList entries = new DatabaseUtils().selectTable(this, this.typeComboBox.getItemAt(1));
                        for (int a = 0; a < entries.size(); a++) {
                            tableModel.addRow((Object[]) entries.get(a));
                        }
                    }
                    break;
                }
            case 2:
                {
                    this.idField.setText(new DatabaseUtils().nextId(this, this.typeComboBox.getItemAt(2)));
                    DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
                    if (tableModel.getColumnCount() > 2) {
                        tableModel.setColumnCount(2);
                    }       
                    if(tableModel.getColumnCount() < 7){
                        tableModel.addColumn("dep_id");
                        tableModel.addColumn("fac_id");
                        tableModel.addColumn("course_id");
                        tableModel.addColumn("grades");
                        tableModel.addColumn("course_materials");
                    }
                    if(tableModel.getRowCount() >= 1){
                        tableModel.setRowCount(0);
                        ArrayList entries = new DatabaseUtils().selectTable(this, this.typeComboBox.getItemAt(2));
                        for (int a = 0; a < entries.size(); a++) {
                            tableModel.addRow((Object[]) entries.get(a));
                        }
                    }
                    break;
                }
            default:
                break;
        }
        
        
        
    }//GEN-LAST:event_typeComboBoxActionPerformed

    private void addOrRemoveComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrRemoveComboBoxActionPerformed
        switch (addOrRemoveComboBox.getSelectedIndex()){
            case 0:
            {
                this.jTable1.setVisible(false);
                this.jScrollPane1.setVisible(false);
                this.nameField.setVisible(true);
                this.idField.setVisible(true);
                this.jLabel2.setVisible(true);
                this.jLabel3.setVisible(true);
                this.addBtn.setText("Add");
                
                DatabaseUtils databaseUtils = new DatabaseUtils();
                this.idField.setText(databaseUtils.nextId(this, this.typeComboBox.getItemAt(this.typeComboBox.getSelectedIndex())));
                                
                this.revalidate();
                this.repaint();
                break;
            }
            case 1:
            {
                this.jTable1.setVisible(true);
                this.jScrollPane1.setVisible(true);
                this.nameField.setVisible(false);
                this.idField.setVisible(false);
                this.jLabel2.setVisible(false);
                this.jLabel3.setVisible(false);
                this.addBtn.setText("Remove");
                this.revalidate();
                this.repaint();
                break;
            }
            default:
                break;
        }
        
    }//GEN-LAST:event_addOrRemoveComboBoxActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        DatabaseUtils dbut = new DatabaseUtils();
        if(this.addBtn.getText().equals("Add")){
            String Table = this.typeComboBox.getItemAt(this.typeComboBox.getSelectedIndex());
            int ID = Integer.parseInt(this.idField.getText());
            String Name = this.nameField.getText();
            dbut.InsertInto(this, Table, ID, Name);
            this.idField.setText(String.valueOf(Integer.parseInt(this.idField.getText())+1));
            this.nameField.setText("");
        }else if(this.addBtn.getText().equals("Remove")){
            
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        AdminPage a = new AdminPage();
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsersPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JComboBox<String> addOrRemoveComboBox;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nameField;
    private javax.swing.JComboBox<String> typeComboBox;
    // End of variables declaration//GEN-END:variables
}
